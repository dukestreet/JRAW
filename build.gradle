//import java.util.stream.Collectors

buildscript {
    ext.kotlinVersion = '1.6.10'
    ext.spekVersion = '1.1.5'
    ext.moshiVersion = '1.13.0'
    ext.autoValueVersion = '1.5.4'
    ext.dokkaVersion = '0.9.17'
    ext.okhttpVersion = '3.10.0'

    repositories {
        google()
        mavenCentral()
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokkaVersion}"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'
    }
}

//apply plugin: 'jacoco'

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }
}

subprojects {
//    apply plugin: 'org.junit.platform.gradle.plugin'
    apply plugin: 'kotlin'
//    apply plugin: 'jacoco'
//
//    sourceCompatibility = JavaVersion.VERSION_11
//    targetCompatibility = JavaVersion.VERSION_11
    group = 'net.dean.jraw'
    version = '1.1.0'

    repositories {
        mavenCentral()
        jcenter()
    }

//    dependencies {
//        testImplementation 'com.winterbe:expekt:0.5.0'
//        testImplementation("org.jetbrains.spek:spek-api:$spekVersion") {
//            exclude group: 'org.jetbrains.kotlin'
//        }
//        testRuntimeOnly 'org.junit.platform:junit-platform-engine:1.0.0'
//        testRuntimeOnly "org.jetbrains.spek:spek-junit-platform-engine:$spekVersion"
//    }

//    project.afterEvaluate {
//        def junitPlatformTestTask = project.tasks.getByName('junitPlatformTest')
//
//        jacoco {
//            toolVersion = "0.7.9"
//            reportsDir = file("$buildDir/reports/jacoco")
//            applyTo junitPlatformTestTask
//        }
//
//        project.task(type: JacocoReport, "junitPlatformJacocoReport", {
//            sourceDirectories = files("src/main/kotlin")
//            classDirectories = files("$buildDir/classes/main")
//            reports {
//                xml.enabled = true
//                html.enabled = true
//                xml.destination file("$buildDir/reports/jacoco/test/jacocoTestReport.xml")
//                html.destination file("$buildDir/reports/jacoco/test/jacocoTestReport.html")
//            }
//            executionData junitPlatformTestTask
//        })
//    }
//
//    junitPlatform {
//        platformVersion '1.0.0'
//        filters {
//            engines {
//                include 'spek'
//            }
//        }
//    }
}

// Only do code coverage for :lib
//def reportedProjects = subprojects.findAll { it.name == "lib" }
//def subprojectsExecFiles = files(
//    reportedProjects.stream().map { "${it.name}/build/jacoco/junitPlatformTest.exec" }.collect(Collectors.toList()))
//
//task jacocoRootReport(type: JacocoReport) {
//    additionalSourceDirs = files(reportedProjects.sourceSets.main.allSource.srcDirs)
//    sourceDirectories = files(reportedProjects.sourceSets.main.allSource.srcDirs)
//    classDirectories = files(reportedProjects.sourceSets.main.output)
//    executionData = subprojectsExecFiles
//    reports {
//        html.enabled = true
//        xml.enabled = true
//        csv.enabled = false
//    }
//
//    onlyIf = {
//        true
//    }
//}
