import net.dean.jraw.gradle.GitbookPush

apply plugin: 'kotlin'

ext.bookOutDir = file("build/docs").absoluteFile

dependencies {
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation 'com.thoughtworks.qdox:qdox:2.0-M6'
    implementation 'org.reflections:reflections:0.9.10'
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation project(':lib')
    runtimeOnly "org.slf4j:slf4j-simple:1.7.25"
}

task buildSite(type: JavaExec, dependsOn: classes) {
    main = 'net.dean.jraw.docs.MainKt'
    classpath = sourceSets.main.runtimeClasspath

    def samplesDir = sourceSets.main.java.srcDirs[0]
    args = [
        "--samples-dir", samplesDir,
        "--output-dir", bookOutDir.absolutePath,
        "--resources-dir", sourceSets.main.resources.srcDirs[0].absolutePath
    ]
}

task pushSite(type: GitbookPush, dependsOn: buildSite) {
    // Allow credentials to be read from environmental variables. Mostly used by Travis
    def gbUsername = System.getenv("GITBOOK_USERNAME") ?: project.hasProperty("gitbookUsername") ? gitbookUsername : null
    def gbPassword = System.getenv("GITBOOK_PASSWORD") ?: project.hasProperty("gitbookPassword") ? gitbookPassword : null
    onlyIf { gbUsername != null && gbPassword != null }

    username gbUsername
    password gbPassword
    repository "https://git.gitbook.com/mattbdean/jraw.git"
    compiledBookDir bookOutDir
}
